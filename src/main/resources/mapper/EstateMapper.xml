<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjingwen.szptcoins.mapper.EstateMapper">
    <resultMap id="BaseResultMap" type="com.zjingwen.szptcoins.pojo.Estate">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="coins" jdbcType="DECIMAL" property="coins"/>
        <result column="power" jdbcType="DECIMAL" property="power"/>
        <result column="indenCode" jdbcType="VARCHAR" property="indenCode"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, coins, power, indenCode, uid
    </sql>
    <select id="selectByExample" parameterType="com.zjingwen.szptcoins.pojo.EstateExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from estate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from estate
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from estate
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zjingwen.szptcoins.pojo.Estate"
            useGeneratedKeys="true">
        insert into estate (coins, power, indenCode,
        uid)
        values (#{coins,jdbcType=DECIMAL}, #{power,jdbcType=DECIMAL}, #{indenCode,jdbcType=VARCHAR},
        #{uid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zjingwen.szptcoins.pojo.Estate"
            useGeneratedKeys="true">
        insert into estate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="coins != null">
                coins,
            </if>
            <if test="power != null">
                power,
            </if>
            <if test="indenCode != null">
                indenCode,
            </if>
            <if test="uid != null">
                uid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="coins != null">
                #{coins,jdbcType=DECIMAL},
            </if>
            <if test="power != null">
                #{power,jdbcType=DECIMAL},
            </if>
            <if test="indenCode != null">
                #{indenCode,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zjingwen.szptcoins.pojo.Estate">
        update estate
        <set>
            <if test="coins != null">
                coins = #{coins,jdbcType=DECIMAL},
            </if>
            <if test="power != null">
                power = #{power,jdbcType=DECIMAL},
            </if>
            <if test="indenCode != null">
                indenCode = #{indenCode,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByUid" parameterType="com.zjingwen.szptcoins.pojo.Estate">
        update estate
        <set>
            <if test="coins != null">
                coins = #{coins,jdbcType=DECIMAL},
            </if>
            <if test="power != null">
                power = #{power,jdbcType=DECIMAL},
            </if>
            <if test="indenCode != null">
                indenCode = #{indenCode,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
        </set>
        where uid = #{uid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zjingwen.szptcoins.pojo.Estate">
        update estate
        set coins = #{coins,jdbcType=DECIMAL},
        power = #{power,jdbcType=DECIMAL},
        indenCode = #{indenCode,jdbcType=VARCHAR},
        uid = #{uid,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>