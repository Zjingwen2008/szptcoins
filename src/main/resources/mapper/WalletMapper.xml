<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjingwen.szptcoins.mapper.WalletMapper">
  <resultMap id="BaseResultMap" type="com.zjingwen.szptcoins.pojo.Wallet">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="publicKey" jdbcType="VARCHAR" property="publicKey" />
    <result column="privateKey" jdbcType="VARCHAR" property="privateKey" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="wif" jdbcType="VARCHAR" property="wif" />
    <result column="wifCompressed" jdbcType="VARCHAR" property="wifCompressed" />
    <result column="base58" jdbcType="VARCHAR" property="base58" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="hash160" jdbcType="VARCHAR" property="hash160" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, publicKey, privateKey, uid, wif, wifCompressed, base58, address, hash160
  </sql>
  <select id="selectByExample" parameterType="com.zjingwen.szptcoins.pojo.WalletExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from wallet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wallet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wallet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByUid" parameterType="java.lang.Integer">
    delete from wallet
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zjingwen.szptcoins.pojo.Wallet" useGeneratedKeys="true">
    insert into wallet (publicKey, privateKey, uid, 
      wif, wifCompressed, base58, 
      address, hash160)
    values (#{publicKey,jdbcType=VARCHAR}, #{privateKey,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, 
      #{wif,jdbcType=VARCHAR}, #{wifCompressed,jdbcType=VARCHAR}, #{base58,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{hash160,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zjingwen.szptcoins.pojo.Wallet" useGeneratedKeys="true">
    insert into wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="publicKey != null">
        publicKey,
      </if>
      <if test="privateKey != null">
        privateKey,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="wif != null">
        wif,
      </if>
      <if test="wifCompressed != null">
        wifCompressed,
      </if>
      <if test="base58 != null">
        base58,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="hash160 != null">
        hash160,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="publicKey != null">
        #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="wif != null">
        #{wif,jdbcType=VARCHAR},
      </if>
      <if test="wifCompressed != null">
        #{wifCompressed,jdbcType=VARCHAR},
      </if>
      <if test="base58 != null">
        #{base58,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="hash160 != null">
        #{hash160,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjingwen.szptcoins.pojo.Wallet">
    update wallet
    <set>
      <if test="publicKey != null">
        publicKey = #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        privateKey = #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="wif != null">
        wif = #{wif,jdbcType=VARCHAR},
      </if>
      <if test="wifCompressed != null">
        wifCompressed = #{wifCompressed,jdbcType=VARCHAR},
      </if>
      <if test="base58 != null">
        base58 = #{base58,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="hash160 != null">
        hash160 = #{hash160,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByUidSelective" parameterType="com.zjingwen.szptcoins.pojo.Wallet">
    update wallet
    <set>
      <if test="publicKey != null">
        publicKey = #{publicKey,jdbcType=VARCHAR},
      </if>
      <if test="privateKey != null">
        privateKey = #{privateKey,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="wif != null">
        wif = #{wif,jdbcType=VARCHAR},
      </if>
      <if test="wifCompressed != null">
        wifCompressed = #{wifCompressed,jdbcType=VARCHAR},
      </if>
      <if test="base58 != null">
        base58 = #{base58,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="hash160 != null">
        hash160 = #{hash160,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjingwen.szptcoins.pojo.Wallet">
    update wallet
    set publicKey = #{publicKey,jdbcType=VARCHAR},
      privateKey = #{privateKey,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      wif = #{wif,jdbcType=VARCHAR},
      wifCompressed = #{wifCompressed,jdbcType=VARCHAR},
      base58 = #{base58,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      hash160 = #{hash160,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>